<script>
socket.on('stats_memory', function(message) {
    renderMemory(message);
    console.log("mem", message)
});

// socket.on('stats_cpu', function(message) {
//     renderCPU(message);
//         console.log("cpu", message)

// });


function renderMemory(message){
  const grapharea  = document.getElementById('memoryCanvas').getContext("2d");
   
const data = {
  datasets: [{
    label: 'Mem√≥ria em uso',
    data: message.memory.data,
    backgroundColor: 'blue',
    borderColor: 'rgb(75, 192, 192)',

    fill: false,
    tension: 0.1
  }
  ]
};
const config = {
    type: 'line',
    data: data,
    options: {
        scales: {
             y:{
              max : message.memory.total
             },
        }
    }
  }


   let chartStatus = Chart.getChart("memoryCanvas"); // <canvas> id
    if (chartStatus != undefined) {
      chartStatus.destroy();
    }
    var memoryCanvas = new Chart(grapharea, config);
}


function renderCPU(message){
  const grapharea  = document.getElementById('cpuCanvas');
   
const data = {
  datasets: [{
    label: 'CPU em uso',
    data: message.cpu,
    backgroundColor: '#0000FF',
    fill: false,
    tension: 0.1
  }
  ]
};
    const config = {
    type: 'line',
    data: data,
    options:  {
    responsive: true
    }
    }

   let chartStatus = Chart.getChart("cpuCanvas"); // <canvas> id
    if (chartStatus != undefined) {
      chartStatus.destroy();
    }
    var cpuCanvas = new Chart(grapharea, config);
}
</script>
  <canvas id="memoryCanvas"></canvas>
  <canvas id="cpuCanvas"></canvas>
